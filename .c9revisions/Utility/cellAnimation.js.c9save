{"ts":1347396164625,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function CellAnimation(imageFile, cellX, cellY, frameCount, framesPerSecond, continuation) {\r\n    var self = this;\r\n    this.ImageFile = imageFile;\r\n    this.CellX = cellX;\r\n    this.CellY = cellY;\r\n    this.Delta = (1000 / framesPerSecond);\r\n    this.CurrentFrame = 0;\r\n    this.FrameDelta = 0;\r\n    \r\n    this.StartFrame = 0;\r\n    this.EndFrame = frameCount;\r\n    \r\n    /* The current image  */\r\n    this.CurrentImage = null;\r\n    \r\n    this.Frames = [];\r\n    \r\n    var init = function() {\r\n        var baseImage = new Image();\r\n        baseImage.onload = function () {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = baseImage.width;\r\n            canvas.height = baseImage.height;\r\n            \r\n            var canvasContext = canvas.getContext(\"2d\");\r\n            \r\n            // stamp the image on the left of the canvas:\r\n            canvasContext.drawImage(baseImage, 0, 0);\r\n                    \r\n            var baseX = 0;\r\n            var baseY = 0;\r\n            var imageWidth = baseImage.width;\r\n            var imageHeight = baseImage.height;\r\n            \r\n            var cellWidth = imageWidth / cellX;\r\n            var cellHeight = imageHeight / cellY;\r\n            \r\n            var newCanvas = document.createElement('canvas');\r\n            \r\n            newCanvas.width = cellWidth;\r\n            newCanvas.height = cellHeight;\r\n            \r\n            var newContext = newCanvas.getContext(\"2d\");\r\n            \r\n            var framesGrabbed = 0;\r\n            for (baseY = 0; baseY < cellY; baseY++) {\r\n                var currentBaseY = baseY * cellHeight;\r\n                baseX = 0;\r\n                for (baseX = 0; baseX < cellX; baseX++) {\r\n                    if (framesGrabbed >= frameCount) {\r\n                        break;\r\n                    }                    \r\n                    framesGrabbed++;\r\n                    \r\n                    var currentBaseX = baseX * cellWidth;\r\n                    console.log(\"Current Frame: \" + framesGrabbed + \", X: \" + currentBaseX + \", Y: \" + currentBaseY);\r\n                    \r\n                    newContext.fillStyle = \"#000000\";\r\n                    newContext.fillRect(0,0,cellWidth,cellHeight);\r\n                    \r\n                    newContext.drawImage(canvas, currentBaseX, currentBaseY, cellWidth, cellHeight, 0,0,cellWidth,cellHeight);\r\n\r\n                    self.Frames.push(Canvas2Image.saveAsPNG(newCanvas, true));\r\n                }\r\n            }\r\n            \r\n            if (typeof continuation !== 'undefined'\r\n            && typeof continuation === 'function') {\r\n                continuation();\r\n            }\r\n        };\r\n        baseImage.src = imageFile;\r\n    };\r\n    \r\n    if (cellX > 0 && cellY > 0) {\r\n        if (frameCount === 'undefined') {\r\n            var frameCount = cellX * cellY;\r\n        } else if (frameCount < 1) {\r\n            frameCount = cellX * cellY;\r\n        }\r\n        \r\n        init();\r\n    }\r\n    /*\r\n      Pushes a new image into the Frames property.\r\n    */\r\n    this.PushImage = function(newImage) {\r\n        this.Frames.push(newImage);\r\n    }\r\n    \r\n    /*\r\n      Updates the animation cell.\r\n    */\r\n    this.UpdateCell = function(delta) {\r\n        self.FrameDelta += delta;\r\n        \r\n        if (self.FrameDelta > self.Delta) {\r\n            self.FrameDelta -= self.Delta;\r\n            \r\n            if (self.CurrentFrame >= self.EndFrame) {\r\n                self.CurrentFrame = self.StartFrame;\r\n            } else {\r\n                self.CurrentFrame++;\r\n            }\r\n            \r\n            self.CurrentImage = self.Frames[self.CurrentFrame];\r\n\r\n        }\r\n    }\r\n    \r\n    this.SetCurrentImage = function() {\r\n        self.CurrentImage = self.Frames[self.CurrentFrame];\r\n    }\r\n    \r\n    this.ChangeAnimationBounds = function(startCell, endCell) {\r\n        if (startCell < 0) {\r\n            startCell = 0;\r\n        } \r\n        if (endCell >= self.Frames.length) {\r\n            endCell = self.Frames.length - 1;\r\n        }\r\n        \r\n        self.StartFrame = startCell;\r\n        self.EndFrame = endCell;\r\n        self.CurrentFrame = startCell;\r\n\r\n        self.CurrentImage = self.Frames[self.CurrentFrame];\r\n        console.log(\"S:\" + self.StartFrame + \", E:\" + self.EndFrame + \", c:\" + self.CurrentFrame);\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":4305}]],"length":4305}
