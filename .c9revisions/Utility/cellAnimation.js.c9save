{"ts":1347396164625,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function CellAnimation(imageFile, cellX, cellY, frameCount, framesPerSecond, continuation) {\r\n    var self = this;\r\n    this.ImageFile = imageFile;\r\n    this.CellX = cellX;\r\n    this.CellY = cellY;\r\n    this.Delta = (1000 / framesPerSecond);\r\n    this.CurrentFrame = 0;\r\n    this.FrameDelta = 0;\r\n    \r\n    this.StartFrame = 0;\r\n    this.EndFrame = frameCount;\r\n    \r\n    /* The current image  */\r\n    this.CurrentImage = null;\r\n    \r\n    this.Frames = [];\r\n    \r\n    var init = function() {\r\n        var baseImage = new Image();\r\n        baseImage.onload = function () {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = baseImage.width;\r\n            canvas.height = baseImage.height;\r\n            \r\n            var canvasContext = canvas.getContext(\"2d\");\r\n            \r\n            // stamp the image on the left of the canvas:\r\n            canvasContext.drawImage(baseImage, 0, 0);\r\n                    \r\n            var baseX = 0;\r\n            var baseY = 0;\r\n            var imageWidth = baseImage.width;\r\n            var imageHeight = baseImage.height;\r\n            \r\n            var cellWidth = imageWidth / cellX;\r\n            var cellHeight = imageHeight / cellY;\r\n            \r\n            var newCanvas = document.createElement('canvas');\r\n            \r\n            newCanvas.width = cellWidth;\r\n            newCanvas.height = cellHeight;\r\n            \r\n            var newContext = newCanvas.getContext(\"2d\");\r\n            \r\n            var framesGrabbed = 0;\r\n            for (baseY = 0; baseY < cellY; baseY++) {\r\n                var currentBaseY = baseY * cellHeight;\r\n                baseX = 0;\r\n                for (baseX = 0; baseX < cellX; baseX++) {\r\n                    if (framesGrabbed >= frameCount) {\r\n                        break;\r\n                    }                    \r\n                    framesGrabbed++;\r\n                    \r\n                    var currentBaseX = baseX * cellWidth;\r\n                    console.log(\"Current Frame: \" + framesGrabbed + \", X: \" + currentBaseX + \", Y: \" + currentBaseY);\r\n                    \r\n                    newContext.fillStyle = \"#000000\";\r\n                    newContext.fillRect(0,0,cellWidth,cellHeight);\r\n                    \r\n                    newContext.drawImage(canvas, currentBaseX, currentBaseY, cellWidth, cellHeight, 0,0,cellWidth,cellHeight);\r\n\r\n                    self.Frames.push(Canvas2Image.saveAsPNG(newCanvas, true));\r\n                }\r\n            }\r\n            \r\n            if (typeof continuation !== 'undefined'\r\n            && typeof continuation === 'function') {\r\n                continuation();\r\n            }\r\n        };\r\n        baseImage.src = imageFile;\r\n    };\r\n    \r\n    if (cellX > 0 && cellY > 0) {\r\n        if (frameCount === 'undefined') {\r\n            var frameCount = cellX * cellY;\r\n        } else if (frameCount < 1) {\r\n            frameCount = cellX * cellY;\r\n        }\r\n        \r\n        init();\r\n    }\r\n    /*\r\n      Pushes a new image into the Frames property.\r\n    */\r\n    this.PushImage = function(newImage) {\r\n        this.Frames.push(newImage);\r\n    }\r\n    \r\n    /*\r\n      Updates the animation cell.\r\n    */\r\n    this.UpdateCell = function(delta) {\r\n        self.FrameDelta += delta;\r\n        \r\n        if (self.FrameDelta > self.Delta) {\r\n            self.FrameDelta -= self.Delta;\r\n            \r\n            if (self.CurrentFrame >= self.EndFrame) {\r\n                self.CurrentFrame = self.StartFrame;\r\n            } else {\r\n                self.CurrentFrame++;\r\n            }\r\n            \r\n            self.CurrentImage = self.Frames[self.CurrentFrame];\r\n\r\n        }\r\n    }\r\n    \r\n    this.SetCurrentImage = function() {\r\n        self.CurrentImage = self.Frames[self.CurrentFrame];\r\n    }\r\n    \r\n    this.ChangeAnimationBounds = function(startCell, endCell) {\r\n        if (startCell < 0) {\r\n            startCell = 0;\r\n        } \r\n        if (endCell >= self.Frames.length) {\r\n            endCell = self.Frames.length - 1;\r\n        }\r\n        \r\n        self.StartFrame = startCell;\r\n        self.EndFrame = endCell;\r\n        self.CurrentFrame = startCell;\r\n\r\n        self.CurrentImage = self.Frames[self.CurrentFrame];\r\n        console.log(\"S:\" + self.StartFrame + \", E:\" + self.EndFrame + \", c:\" + self.CurrentFrame);\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":4305}]],"length":4305}
{"contributors":[],"silentsave":true,"ts":1351451591161,"patch":[[{"diffs":[[1,"jse "],[0,"function CellAni"]],"start1":0,"start2":0,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"Cur"]],"start1":1968,"start2":1968,"length1":32,"length2":34}]],"length":4311,"saved":false}
{"ts":1351451592451,"patch":[[{"diffs":[[-1,"jse "],[0,"func"]],"start1":0,"start2":0,"length1":8,"length2":4}]],"length":4307,"saved":false}
{"ts":1351451595052,"patch":[[{"diffs":[[1,"$"],[0,"function CellAni"]],"start1":0,"start2":0,"length1":16,"length2":17}]],"length":4308,"saved":false}
{"ts":1351451596034,"patch":[[{"diffs":[[0,"$"],[1,"es"],[0,"function"]],"start1":0,"start2":0,"length1":9,"length2":11}]],"length":4310,"saved":false}
{"ts":1351451597097,"patch":[[{"diffs":[[0,"$es"],[1," "],[0,"function"]],"start1":0,"start2":0,"length1":11,"length2":12}]],"length":4311,"saved":false}
{"ts":1351451598549,"patch":[[{"diffs":[[-1,"$es "],[0,"func"]],"start1":0,"start2":0,"length1":8,"length2":4}]],"length":4307,"saved":false}
{"ts":1351451643987,"patch":[[{"diffs":[[0,"on cell."],[1," "],[0,"\r\n    */"]],"start1":3164,"start2":3164,"length1":16,"length2":17}]],"length":4308,"saved":false}
{"ts":1351451646348,"patch":[[{"diffs":[[0,"n cell. "],[1,"You can then "],[0,"\r\n    */"]],"start1":3165,"start2":3165,"length1":16,"length2":29}]],"length":4321,"saved":false}
{"ts":1351451652003,"patch":[[{"diffs":[[0,"an then "],[1,"RenderCurrent"],[0,"\r\n    */"]],"start1":3178,"start2":3178,"length1":16,"length2":29}]],"length":4334,"saved":false}
{"ts":1351451653181,"patch":[[{"diffs":[[0,"rCurrent"],[1,"()"],[0,"\r\n    */"]],"start1":3191,"start2":3191,"length1":16,"length2":18}]],"length":4336,"saved":false}
{"ts":1351451655598,"patch":[[{"diffs":[[0,"Current("],[-1,")"],[0,"\r\n    */"]],"start1":3192,"start2":3192,"length1":17,"length2":16}]],"length":4335,"saved":false}
{"ts":1351451657428,"patch":[[{"diffs":[[0,"Current("],[1,"context"],[0,"\r\n    */"]],"start1":3192,"start2":3192,"length1":16,"length2":23}]],"length":4342,"saved":false}
{"ts":1351451666492,"patch":[[{"diffs":[[0,"(context"],[1,", "],[0,"\r\n    */"]],"start1":3199,"start2":3199,"length1":16,"length2":18}]],"length":4344,"saved":false}
{"ts":1351451669043,"patch":[[{"diffs":[[0,"ontext, "],[1,"x, y, "],[0,"\r\n    */"]],"start1":3201,"start2":3201,"length1":16,"length2":22}]],"length":4350,"saved":false}
{"ts":1351451671314,"patch":[[{"diffs":[[0,", x, y, "],[1,"[]"],[0,"\r\n    */"]],"start1":3207,"start2":3207,"length1":16,"length2":18}]],"length":4352,"saved":false}
{"ts":1351451674856,"patch":[[{"diffs":[[0," x, y, ["],[1,"width, height"],[0,"]\r\n    *"]],"start1":3208,"start2":3208,"length1":16,"length2":29}]],"length":4365,"saved":false}
{"ts":1351451676081,"patch":[[{"diffs":[[0," height]"],[1,");"],[0,"\r\n    */"]],"start1":3222,"start2":3222,"length1":16,"length2":18}]],"length":4367,"saved":false}
{"ts":1351451682710,"patch":[[{"diffs":[[0,"x, y"],[-1,","],[0," ["],[1,"]"],[0,"widt"]],"start1":3209,"start2":3209,"length1":11,"length2":11}]],"length":4367,"saved":false}
{"ts":1351451683473,"patch":[[{"diffs":[[0,", x, y ["],[-1,"]"],[1,","],[0,"width, h"]],"start1":3207,"start2":3207,"length1":17,"length2":17}]],"length":4367,"saved":false}
{"ts":1351451684833,"patch":[[{"diffs":[[0," x, y [,"],[1," "],[0,"width, h"]],"start1":3208,"start2":3208,"length1":16,"length2":17}]],"length":4368,"saved":false}
{"ts":1351451686358,"patch":[[{"diffs":[[0,"xt, x, y"],[-1," "],[0,"[, width"]],"start1":3205,"start2":3205,"length1":17,"length2":16}]],"length":4367,"saved":false}
