{"ts":1344647618443,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*A simple vector2 class. Each operation returns a new vector2, so beware!*/\r\nfunction V2(x, y) {\r\n    this.X = x;\r\n    this.Y = y;\r\n    \r\n    var isVector2 = function (value) {\r\n        return value.constructor === V2;\r\n    };\r\n    \r\n    this.multiply = function (value) {\r\n        \r\n        return new V2(this.x*value, this.y*value); \r\n    }\r\n    \r\n    this.multiply = function(vec_) { return new Vec2(this.x * vec_.x, this.y * vec_.y); }\r\n    /* vector / scalar */\r\n    this.divide = function(value) { return new Vec2(this.x/value,this.y/value); }\r\n    /* vector + scalar */\r\n    this.add = function(value) { return new Vec2(this.x+value,this.y+value); }\r\n    /* vector + vector */\r\n    this.add = function(vec_) { return new Vec2(this.x+vec_.x,this.y+vec_.y); }\r\n    /* vector - scalar */\r\n    this.sub = function(value) { return new Vec2(this.x-value, this.y-value); }\r\n    /* vector - vector */\r\n    this.sub = function(vec_) { return new Vec2(this.x-vec_.x,this.y-vec_.y); }\r\n    /* vector absolute */\r\n    this.abs = function() { return new Vec2(Math.abs(this.x),Math.abs(this.y)); }\r\n    /* dot product */\r\n    this.dot = function(vec_) { return (this.x*vec_.x+this.y*vec_.y); }\r\n    /* vector length */\r\n    this.length = function() { return Math.sqrt(this.dot(this)); }\r\n    /* vector length, squared */\r\n    this.lengthSqr = function() { return this.dot(this); }\r\n    /*\r\n    vector linear interpolation\r\n    interpolate between two vectors.\r\n    value should be in 0.0f - 1.0f space\r\n    */\r\n    this.lerp = function(vec_, value) {\r\n    return new Vec2(\r\n    this.x+(vec_.x-this.x)*value,\r\n    this.y+(vec_.y-this.y)*value\r\n    );\r\n    }\r\n    /* normalize THIS vector */\r\n    this.normalize = function() {\r\n    var vlen = this.length();\r\n    this.x = this.x/ vlen;\r\n    this.y = this.y/ vlen;\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1815}]],"length":1815}
{"contributors":[],"silentsave":true,"ts":1344647629438,"patch":[[{"diffs":[[0,"is.y * vec_.y); "],[1,"\r\n    \r\n    "],[0,"}\r\n    /* vector"]],"start1":423,"start2":423,"length1":32,"length2":44}]],"length":1827,"saved":false}
{"ts":1344647633912,"patch":[[{"diffs":[[0,"function(vec_) {"],[1,"\r\n       "],[0," return new Vec2"]],"start1":371,"start2":371,"length1":32,"length2":41}]],"length":1836,"saved":false}
{"ts":1344647635281,"patch":[[{"diffs":[[0,"ec_.y); "],[-1,"\r\n"],[0,"    \r\n  "]],"start1":440,"start2":440,"length1":18,"length2":16}]],"length":1834,"saved":false}
{"ts":1344647636439,"patch":[[{"diffs":[[0,"vec_.y);    "],[-1," "],[0,"\r\n    }\r\n   "]],"start1":439,"start2":439,"length1":25,"length2":24}]],"length":1833,"saved":false}
{"ts":1344647640476,"patch":[[{"diffs":[[0,"nction(value) { "],[1,"\r\n        "],[0,"return new Vec2("]],"start1":507,"start2":507,"length1":32,"length2":42}]],"length":1843,"saved":false}
{"ts":1344647641877,"patch":[[{"diffs":[[0,",this.y/value); "],[1,"\r\n        \r\n    "],[0,"}\r\n    /* vector"]],"start1":561,"start2":561,"length1":32,"length2":48}]],"length":1859,"saved":false}
{"ts":1344647644433,"patch":[[{"diffs":[[0,"lue); \r\n"],[-1,"        \r\n"],[0,"    }\r\n "]],"start1":571,"start2":571,"length1":26,"length2":16}]],"length":1849,"saved":false}
